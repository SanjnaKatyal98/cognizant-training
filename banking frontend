1. Initialize Project and Install Dependencies
Create a new React project with TypeScript:

bash
Copy code

****************************
npx create-react-app banking-app --template typescript
**************************

Navigate to the project directory and install Tailwind CSS:

bash
Copy code


*********************
cd banking-app
npm install -D tailwindcss
npx tailwindcss init

*********************

Configure Tailwind by updating tailwind.config.js to look like this:

javascript


Copy code
/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./src/**/*.{js,jsx,ts,tsx}",
  ],
  theme: {
    extend: {},
  },
  plugins: [],
};
In src/index.css, import Tailwind styles:

css
Copy code
@tailwind base;
@tailwind components;
@tailwind utilities;
2. Directory Structure
Your src directory should look like this:

css
Copy code
src/
├── components/
│   ├── Header.tsx
│   ├── Login.tsx
│   ├── AccountService.tsx
│   ├── TransactionService.tsx
│   ├── FundTransferService.tsx
│   └── AdminService.tsx
├── App.tsx
├── index.tsx
├── index.css
└── types.ts
3. Code for Each File
src/types.ts
Define the TypeScript types used across the application:

typescript
Copy code
// src/types.ts
export interface Account {
  id: number;
  name: string;
  balance: number;
}

export interface Transaction {
  id: number;
  account: string;
  amount: number;
  date: string;
}

export interface TransferDetails {
  from: string;
  to: string;
  amount: number;
}
src/components/Login.tsx
Create the Login component for authentication:

typescript
Copy code
// src/components/Login.tsx
import React, { useState } from 'react';

interface LoginProps {
  onLogin: (username: string, password: string) => void;
}

const Login: React.FC<LoginProps> = ({ onLogin }) => {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    onLogin(username, password);
  };

  return (
    <div className="flex items-center justify-center min-h-screen bg-gray-100">
      <form onSubmit={handleSubmit} className="bg-white p-8 rounded shadow-md w-80">
        <h2 className="text-2xl font-bold text-center mb-6">Login</h2>
        <input
          type="text"
          placeholder="Username"
          value={username}
          onChange={(e) => setUsername(e.target.value)}
          className="w-full p-2 border rounded mb-4"
        />
        <input
          type="password"
          placeholder="Password"
          value={password}
          onChange={(e) => setPassword(e.target.value)}
          className="w-full p-2 border rounded mb-6"
        />
        <button type="submit" className="w-full bg-blue-600 text-white p-2 rounded">Login</button>
      </form>
    </div>
  );
};

export default Login;
src/components/Header.tsx
Create a navigation header:

typescript
Copy code
// src/components/Header.tsx
import React from 'react';

const Header: React.FC = () => (
  <header className="bg-blue-600 text-white p-4">
    <div className="container mx-auto flex justify-between items-center">
      <h1 className="text-2xl font-bold">BankingApp</h1>
      <nav>
        <ul className="flex space-x-4">
          <li><a href="#" className="hover:underline">Accounts</a></li>
          <li><a href="#" className="hover:underline">Transactions</a></li>
          <li><a href="#" className="hover:underline">Transfer</a></li>
          <li><a href="#" className="hover:underline">Admin</a></li>
        </ul>
      </nav>
    </div>
  </header>
);

export default Header;
src/components/AccountService.tsx
Display account information:

typescript
Copy code
// src/components/AccountService.tsx
import React from 'react';
import { Account } from '../types';

const AccountService: React.FC = () => {
  const accounts: Account[] = [
    { id: 1, name: 'John Doe', balance: 5000 },
    { id: 2, name: 'Jane Smith', balance: 3000 },
  ];

  return (
    <section className="mb-8">
      <h2 className="text-xl font-bold mb-4">Accounts</h2>
      <ul className="bg-white p-4 rounded shadow">
        {accounts.map((account) => (
          <li key={account.id} className="mb-2 flex justify-between">
            <span>{account.name}</span>
            <span>${account.balance}</span>
          </li>
        ))}
      </ul>
    </section>
  );
};

export default AccountService;
src/components/TransactionService.tsx
Display transaction history:

typescript
Copy code
// src/components/TransactionService.tsx
import React from 'react';
import { Transaction } from '../types';

const TransactionService: React.FC = () => {
  const transactions: Transaction[] = [
    { id: 1, account: 'John Doe', amount: -200, date: '2024-10-01' },
    { id: 2, account: 'Jane Smith', amount: 500, date: '2024-10-02' },
  ];

  return (
    <section className="mb-8">
      <h2 className="text-xl font-bold mb-4">Transactions</h2>
      <ul className="bg-white p-4 rounded shadow">
        {transactions.map((transaction) => (
          <li key={transaction.id} className="mb-2 flex justify-between">
            <span>{transaction.account}</span>
            <span>{transaction.amount > 0 ? '+' : ''}${transaction.amount}</span>
            <span>{transaction.date}</span>
          </li>
        ))}
      </ul>
    </section>
  );
};

export default TransactionService;
src/components/FundTransferService.tsx
Create a form for fund transfers:

typescript
Copy code
// src/components/FundTransferService.tsx
import React, { useState } from 'react';
import { TransferDetails } from '../types';

const FundTransferService: React.FC = () => {
  const [transferDetails, setTransferDetails] = useState<TransferDetails>({
    from: '',
    to: '',
    amount: 0,
  });

  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target;
    setTransferDetails({ ...transferDetails, [name]: value });
  };

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    console.log('Transfer Details:', transferDetails);
  };

  return (
    <section className="mb-8">
      <h2 className="text-xl font-bold mb-4">Fund Transfer</h2>
      <form onSubmit={handleSubmit} className="bg-white p-4 rounded shadow">
        <input
          type="text"
          name="from"
          placeholder="From Account"
          value={transferDetails.from}
          onChange={handleChange}
          className="w-full p-2 border rounded mb-4"
        />
        <input
          type="text"
          name="to"
          placeholder="To Account"
          value={transferDetails.to}
          onChange={handleChange}
          className="w-full p-2 border rounded mb-4"
        />
        <input
          type="number"
          name="amount"
          placeholder="Amount"
          value={transferDetails.amount}
          onChange={handleChange}
          className="w-full p-2 border rounded mb-4"
        />
        <button type="submit" className="bg-blue-600 text-white p-2 rounded">Transfer</button>
      </form>
    </section>
  );
};

export default FundTransferService;
src/App.tsx
Main application component:

typescript
Copy code
// src/App.tsx
import React, { useState } from 'react';
import Login from './components/Login';
import Header from './components/Header';
import AccountService from './components/AccountService';
import TransactionService from './components/TransactionService';
import FundTransferService from './components/FundTransferService';

const App: React.FC = () => {
  const [isLoggedIn, setIsLoggedIn] = useState(false);

  const handleLogin = (username: string, password: string) => {
    if (username === 'user' && password === 'password') {
      setIsLoggedIn(true);
    } else {
      alert('Invalid credentials');
    }
  };

  return (
    <div className="min-h-screen bg-gray-100">
      {isLoggedIn ? (
        <>
          <Header />
          <main className="container mx-auto p-4">
            <AccountService />
            <TransactionService />
            <FundTransferService />
          </main>
        </>
      ) : (
        <Login onLogin={handleLogin} />
      )}
    </div>
  );
};

export default App;
src/index.tsx
Render the app to the DOM:

typescript
Copy code
// src/index.tsx
import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';

const root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement);
root.render(<App />);
Run the App
Start the development server:

bash
Copy code
npm start
This will open the app in your default browser. You should see a login page, and upon logging in with "user" and "password", you'll access the main app functionalities for accounts, transactions, and fund transfers.
